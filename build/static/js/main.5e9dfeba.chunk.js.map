{"version":3,"sources":["movielist/movielist.js","App.js","serviceWorker.js","index.js"],"names":["text","Home","state","data","page","header","overview","poster","vote_average","release_date","genre_list","movie_id","trailer","isButtonEnabled","filterList","filterList_Id","filterhide","valueSlider","isLoading","banList","getfromDB","bind","getRandomPage","returnTimer","genre_list_var","includes","push","this","setState","i","length","e","innerText","className","splice","prevState","fetch","then","res","json","results","error","console","log","getfromDBGenre","catch","key","reversegetGenre","rndmArray","genre_ids","rndm","Math","floor","random","undefined","componentDidMount","getGenre","title","id","fetchTrailer","poster_path","str","toString","n","indexOf","slice","highestTimeoutId","setTimeout","clearTimeout","rndmCtgr","rndmSimilar","FetchPopularApi","FetchPersonalApi","FetchTopRatedApi","FetchSimilarApi","FetchRecommendedApi","target","value","nameArr","split","movie","replace","array","allbuttons","document","getElementsByClassName","src","alt","type","min","max","onChange","changeSlider","onClick","RefreshFunction","changeFilterShow","addtoFilterList","videoId","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5e9dfeba.chunk.js","sourcesContent":["const text= `Holes,\r\nReservoir Dogs,\r\nKill Bill: Vol. 1,\r\nKill Bill: Vol. 2,\r\nDjango Unchained,\r\nFight Club,\r\nInception,\r\nInterstellar,\r\nAlien,\r\nPredators,\r\nScarface,\r\nForrest Gump,\r\nSe7en,\r\nThe Shawshank Redemption,\r\nLife Is Beautiful,\r\nLet the Right One In,\r\nBack to the Future,\r\nBack to the Future Part II,\r\nBack to the Future Part III,\r\nThe Dark Knight,\r\nThe Dark Knight Rises,\r\nBatman Begins,\r\nThe Shining,\r\nWhiplash,\r\nThe Italian Job,\r\nToy Story,\r\nToy Story 2,\r\nToy Story 3,\r\nMonsters Inc,\r\nBrave,\r\nWALL·E,\r\nThe Incredibles,\r\nUp,\r\nA Bugs Life,\r\nFinding Nemo,\r\nFinding Dory,\r\nRatatouille,\r\nCars,\r\nCars 2,\r\nThe Wolf of Wall Street,\r\nTitanic,\r\nSilence,\r\nCinema Paradiso,\r\nShutter Island,\r\nThe Princess Bride,\r\nThe Big Short,\r\nRoman Holiday,\r\nBig Daddy,\r\nThe Revenant,\r\nWanted,\r\nElf,\r\nOcean's Eleven,\r\nMad Max: Fury Road,\r\nThe Bourne Identity,\r\nThe Bourne Supremacy,\r\nThe Bourne Ultimatum,\r\nThe Bourne Legacy,\r\nTropic Thunder,\r\nJason Bourne,\r\nAvatar,\r\nThe Hitchhiker's Guide to the Galaxy,\r\nThe Prestige,\r\nSherlock Holmes,\r\nThe Fast and the Furious,\r\n2 Fast 2 Furious,\r\nThe Fast and the Furious: Tokyo Drift,\r\nFast & Furious,\r\nFast Five,\r\nFast & Furious 6,\r\nFurious 7,\r\nThe Fate of the Furious,\r\nSnowpiercer,\r\nLa Bamba,\r\nUnder the Same Moon,\r\nMrs. Doubtfire,\r\nJumanji,\r\nZathura: A Space Adventure,\r\nSchool of Rock,\r\nNacho Libre,\r\nKung Fu Panda,\r\nKung Fu Panda 2,\r\nSuperbad,\r\nScott Pilgrim vs. the World,\r\n21 Jump Street,\r\n22 Jump Street,\r\nThe Chronicles of Narnia: The Lion, the Witch and the Wardrobe,\r\nThe Chronicles of Narnia: The Voyage of the Dawn Treader,\r\nRemember the Titans,\r\nCoach Carter,\r\nGlory Road,\r\nGoal! The Dream Begins,\r\nGran Torino,\r\nRaiders of the Lost Ark,\r\nIndiana Jones and the Temple of Doom,\r\nIndiana Jones and the Last Crusade,\r\nIndiana Jones and the Kingdom of the Crystal Skull,\r\nThe Mask of Zorro,\r\nThe Legend of Zorro,\r\nBorat,\r\nAnger Management,\r\nPrisoners,\r\nFlightplan,\r\nSource Code,\r\nLéon: The Professional,\r\nDoctor Strange,\r\nThe Usual Suspects,\r\nCasablanca,\r\nAmerican Psycho,\r\nElite Squad,\r\nMinority Report,\r\nMemento,\r\nNo Country for Old Men,\r\nSicario,\r\nSuicide Squad,\r\nApocalypto,\r\nIndependence Day,\r\nSpectre,\r\nAnt-Man,\r\nThe Boss Baby,\r\nSpider-Man,\r\nSpider-Man 2,\r\nThe Amazing Spider-Man,\r\nSpider-Man 3,\r\nThe Disaster Artist,\r\nCoco,\r\nWonder Woman,\r\nEquilibrium,\r\nArrival,\r\nThe Big Sick,\r\nPush,\r\nIn Time,\r\nThe Colony,\r\nLife as We Know It,\r\nThe Hot Chick,\r\nWhite House Down,\r\nWhite Chicks,\r\nThe Other Guys,\r\nCop Out,\r\nRise of the Planets of the Apes,\r\nRED,\r\nThe Wolverine,\r\nWreck-it Ralph,\r\nSafe,\r\nHouse at the End of the Street,\r\nTaken,\r\nTaken 2,\r\nThe Grey,\r\nSkyfall,\r\nThe Hobbit: An Unexpected Journey,\r\nPirates of the Caribbean: At World's End,\r\nPirates of the Caribbean: The Curse of the Black Pearl,\r\nPirates of the Caribbean: Dead Man's Chest,\r\nMission: Impossible - Ghost Protocol,\r\nThe Pursuit of Happyness,\r\nTransformers,\r\nTroy,\r\nBlue Streak,\r\nEx Machina,\r\nDeath at a Funeral,\r\nTransformers: Dark of the Moon,\r\nNext Friday,\r\nRush Hour 3,\r\nRush Hour,\r\nRush Hour 2,\r\nSherlock Holmes: A Game of Shadows,\r\nFaster,\r\nSky High,\r\nApollo 18,\r\nKnight and Day,\r\nAre We Done Yet?,\r\nAre We There Yet?,\r\nI Am Number Four,\r\nHancock,\r\nThe Book of Eli,\r\nI Am Legend,\r\nMan on a Ledge,\r\nIron Man,\r\nThor,\r\nThe Avengers,\r\nThe Hunger Games,\r\nG-Force,\r\nHigh School Musical 2,\r\nHigh School Musical,\r\nSydney White,\r\nOldboy,\r\nThe Truman Show,\r\nInglourious Basterds,\r\nJurassic Park,\r\nThe Matrix,\r\nThe Matrix Reloaded,\r\nThe Matrix Revolutions,\r\nSpeed,\r\nThe Lord of the Rings: The Return of the King,\r\nThe Lord of the Rings: The Fellowship of the Ring,\r\nThe Lord of the Rings: The Two Towers,\r\nPulp Fiction,\r\nNight at the Museum,\r\nNight at the Museum: Secret of the Tomb,\r\nAlice in Wonderland,\r\nCharlie and the Chocolate Factory,\r\nAmélie,\r\nOcean's Twelve,\r\nOcean's Thirteen,\r\nNightcrawler,\r\nNow You See Me,\r\nLucy,\r\nDivergent,\r\nThe Hunger Games: Catching Fire,\r\nThe Hunger Games: Mockingjay - Part 1,\r\nThor: Ragnarok,\r\nThor: The Dark World,\r\nGuardians of the Galaxy Vol. 2,\r\nAvengers: Age of Ultron,\r\nGuardians of the Galaxy,\r\nCaptain America: Civil War,\r\nThe Babadook,\r\nBaby Driver,\r\nLa La Land,\r\nThe Curious Case of Benjamin Button,\r\nThe Golden Compass,\r\nCleopatra,\r\nSpartacus,\r\nThe Place Beyond the Pines,\r\nThe Martian,\r\nIt,\r\nAvengers: Infinity War,\r\nCars 3,\r\nA Quiet Place,\r\nOcean's 8,\r\nExtremely Loud & Incredibly Close,\r\nCaptain Phillips,\r\nThe Blind Side,\r\nThe Proposal,\r\nThe Terminal, \r\nThe Incredibles 2,\r\nTaxi Driver,\r\nHereditary,\r\nDonnie Darko,\r\nInside Out,\r\nBlacKkKlansman,\r\nBlack Panther,\r\nThe Hobbit: The Battle of the Five Armies,\r\nThe Hobbit: The Desolation of Smaug,\r\nBe Kind Rewind,\r\nThe Green Hornet,\r\nThe Interview,\r\nPineapple Express,\r\nTower Heist,\r\nThis Is the End,\r\nNeighbors,\r\nTed,\r\nTed 2,\r\nWe're the Millers,\r\nHorrible Bosses,\r\nDue Date,\r\n300,\r\nNow You See Me 2,\r\nAnchorman: The Legend of Ron Burgundy,\r\nAnchorman 2: The Legend Continues,\r\nTalladega Nights: The Ballad of Ricky Bobby,\r\nStep Brothers,\r\nDodgeball,\r\nZoolander,\r\nOld School,\r\nGet Smart,\r\nG.I. Joe: Retaliation,\r\nThe Expendables,\r\nThe Expendables 2,\r\nRED 2,\r\nDeath Race,\r\nCowboys & Aliens,\r\nTRON: Legacy,\r\nJohn Carter,\r\nPrince of Persia: The Sands of Time,\r\nDracula Untold,\r\nThe Predator,\r\n2012,\r\nBattleship,\r\nMoon,\r\nThe Founder,\r\nLady Bird,\r\nA Simple Favor,\r\nGet Out,\r\nBird Box,\r\nSpider-Man: Into the Spider-Verse,\r\nHot Fuzz,\r\nGame Night,\r\nDon't Breathe,\r\nKingsman: The Secret Service,\r\nDeadpool,\r\nDeadpool 2,\r\nJohn Wick,\r\nJohn Wick 2,\r\nJohn Wick 3,\r\nDawn of the Planet of the Apes,\r\nGodzilla,\r\nAnnihilation,\r\nVelvet Buzzsaw,\r\nAnt-Man and the Wasp,\r\nThe Witch,\r\nDunkirk,\r\nEternal Sunshine of the Spotless Mind,\r\nRoma,\r\nReady Player One,\r\nWonder,\r\nWayne's World,\r\nSplit,\r\n12 Monkeys,\r\nStonehearst Asylum,\r\nPublic Enemies,\r\nTakers,\r\nThe Equalizer,\r\nKingsman: The Golden Circle,\r\nFerris Bueller's Day Off,\r\nRocknRolla,\r\nLawless,\r\nFury,\r\nThe Fighter,\r\nThe Lone Ranger,\r\nThe Tourist,\r\nSalt,\r\nMr. & Mrs. Smith,\r\nI Robot,\r\nWorld War Z,\r\nMen in Black,\r\nMen in Black II,\r\nMen in Black 3,\r\nEdge of Tomorrow,\r\nLooper,\r\nStep Up,\r\nThe World's End,\r\nStep Up All In,\r\nAvengers: Endgame,\r\nBad Times at the El Royale,\r\nThe Lego Movie,\r\nThe LEGO Movie 2: The Second Part,\r\nJust Go with It,\r\nThe Cabin in the Woods,\r\nGrandma's Boy,\r\nRalph Breaks the Internet,\r\nAmerican Animals,\r\nJumanji: Welcome to the Jungle,\r\nBohemian Rhapsody,\r\nGlass,\r\nCaptain Marvel,\r\nToy Story 4,\r\nUs,\r\nSpider-Man: Far from Home,\r\nEscape Room,\r\nBeats,\r\nThe Imitation Game,\r\nAd Astra,\r\n6 Underground,\r\nSnatch,\r\nKnives Out,\r\nMidsommar,\r\nIt Chapter Two,\r\nThe Departed,\r\nCatch Me If You Can,\r\nLogan,\r\nPrimer,\r\nUnderwater,\r\n1917,\r\nAlita: Battle Angel,\r\nContagion,\r\nOnce Upon a Time in Hollywood,\r\nOnward,\r\nThe Platform,\r\nEmma.,\r\nThe Illusionist,\r\nInsidious,\r\nInsidious: Chapter 2,\r\nInsidious: Chapter 3,\r\nThe Notebook,\r\nThe Great Gatsby,\r\n10 Things I Hate About You,\r\nBlack Swan,\r\nThe Second Mother,\r\nAnimal Kingdom,\r\nGood Time,\r\nLast Man Standing,\r\nKiss Kiss Bang Bang,\r\nDrive,\r\nThe Town,\r\nThe Score,\r\nLock, Stock and Two Smoking Barrels,\r\nLayer Cake,\r\nAmerican Hustle,\r\nKilling them Softly,\r\nPoint Break,\r\nMean Streets,\r\nIn Bruges,\r\nEasy Rider,\r\nNew Jack City,\r\nSin City,\r\nThe Thomas Crown Affair,\r\nTraffic,\r\nDonnie Brasco,\r\nMatchstick Men,\r\nEastern Promises,\r\nBlow,\r\nJackie Brown,\r\nTrue Romance,\r\nRocknRolla,\r\nMenace II Society,\r\nThe Sting,\r\nRoad to Perdition,\r\nRonin,\r\nBlow Out,\r\nThe Bad Sleep Well,\r\nGangs of New York,\r\nThief,\r\nChinatown,\r\nTouch Of Evil,\r\nThe French Connection,\r\nAmerican Gangster,\r\nCarlito’s Way,\r\nTraining Day,\r\nCity of God,\r\nCasino,\r\nOnce Upon a Time in America,\r\nL.A. Confidential,\r\nGoodfellas,\r\nHeat,\r\nFear City: New York vs the Mafia,\r\nThe Business of Drugs,\r\nChildren of Men,\r\nBoogie Nights,\r\nAlmost Famous,\r\nThe Breakfast Club,\r\nThis Is Spinal Tap,\r\nManhattan,\r\nAll That Jazz,\r\nDawn of the Dead,\r\nThe Holy Mountain,\r\nThe Wild Bunch,\r\nNight of the Living Dead,\r\nIn the Heat of the Night,\r\nCharade,\r\nSpartacus,\r\nBreathless,\r\nPaddington 2,\r\nKubo and the Two Strings,\r\nManchester by the Sea,\r\nRogue One: A Star Wars Story,\r\nThe Hateful Eight,\r\nBig Hero 6,\r\nThe Broken Circle Breakdown,\r\nThe Wind Rises,\r\nHow to Train Your Dragon 2,\r\nI Saw the Devil,\r\nThe Girl with the Dragon Tattoo,\r\nCaptain Phillips,\r\nThe Man from Nowhere,\r\nStraight Outta Compton,\r\nThe Boy in the Striped Pajamas,\r\nMr. Nobody,\r\nLittle Miss Sunshine,\r\nPride & Prejudice,\r\nTokyo Godfathers,\r\nWalk The Line,\r\nSerenity,\r\nThe Triplets of Belleville,\r\nThe Count of Monte Cristo,\r\nWalking Life,\r\nCast Away,\r\nThe Boondock Saints,\r\nOpen Your Eyes,\r\nFireworks,\r\nGattaca,\r\nThe Game,\r\nBreaking the Waves,\r\nEd Wood,\r\nTombstone,\r\nThe Sandlot,\r\nNaked,\r\nThe Fugitive,\r\nMisery,\r\nAwakenings,\r\nUncle Tom,\r\nTread,\r\nThe Fight,\r\nOut of Shadows,\r\nThe Speed Cubers,\r\nThe Weight of Gold,\r\nFather Soldier Son,\r\nEarthlings,\r\nRebuilding Paradise,\r\nAthlete A,\r\nThe Go-Go's,\r\nShowbiz Kids,\r\nSpaceship Earth,\r\nFree Solo,\r\nMucho Mucho Amor: The Legend of Walter Mercado,\r\nBob Lazar: Area 51 & Flying Saucers,\r\nThree Identical Strangers,\r\nThe Photo-Drama of Creation,\r\nJohn Lewis: Good Trouble,\r\nThey Shall Not Grow Old,\r\nDisclosure,\r\nStockton on My Mind,\r\nI Am Not Your Negro,\r\nYou Don't Nomi,\r\nIcarus,\r\nHoneyland,\r\nUnacknowledged,\r\nGrizzly Man,\r\nMiss Americana,\r\nWe Are Freestyle Love Supreme,\r\nThe Booksellers,\r\nMy Truth: The Rape of Two Coreys,\r\nDemon House,\r\nBaraka,\r\nBlackfish,\r\nPumping Iron,\r\nA Secret Love,\r\nShoah,\r\nTouching the Void,\r\nMissing 411,\r\nSour Grapes,\r\nO.J.: Made in America,\r\nWoodstock,\r\nZappa,\r\nThe Inventor: Out for Blood in Silicon Valley,\r\nParadise Lost: The Child Murders at Robin Hood Hills,\r\nCrumb,\r\nBloody Nose Empty Pockets,\r\nOur Godfather,\r\nFahrenheit 9 11,\r\nThe Red Pill,\r\nWrinkles the Clown,\r\nTickled,\r\nWaltz with Bashir,\r\nElephant,\r\nThe Salt of the Earth,\r\nEcho in the Canyon,\r\nTriumph of the Will,\r\nCircus of Books,\r\nThe Dissident,\r\nWelcome to Chechnya,\r\nLast Breath,\r\nMarianne & Leonard: Words of Love,\r\nBeware the Slenderman,\r\nOnce Is Enough,\r\nAnelka: Misunderstood,\r\nMinding the Gap,\r\nHoly Hell,\r\nWhat the Health,\r\nDiego Maradona,\r\nThe Kingmaker,\r\nEverybodys Everything,\r\nMy Scientology Movie,\r\nCapital in the Twenty-First Century,\r\nThe Silence of Others,\r\nFaces Places,\r\nDominion,\r\nCapturing the Friedmans,\r\nVoyeur,\r\nThe Cove,\r\nFraming John DeLorean,\r\nGet Me Roger Stone,\r\nAgain Once Again,\r\nHail Satan?,\r\nHouse of Cardin,\r\nRoom 237,\r\nThe Girl on the Bridge,\r\nStop Making Sense,\r\nThe Thin Blue Line,\r\nSamsara,\r\nInner Worlds, Outer Worlds,\r\nOwned & Operated,\r\nNeurons to Nirvana,\r\nDear Zachary A Letter to a Son About His Father,\r\nThe Two Escobars,\r\nBlood Brother,\r\nThe Act of Killing,\r\nThe Look of Silence,\r\nVirunga,\r\nWon't You Be My Neighbor,\r\nMan on Wire,\r\nAmazing Grace,\r\nLife Itself,\r\nMinding the Gap,\r\nFaces Places,\r\nThree Identical Strangers,\r\nMcQueen,\r\nWeiner,\r\n20 Feet From Stardom,\r\nThe Last Waltz,\r\nKnock Down the House,\r\nKedi,\r\nBlackfish,\r\nTaxi to the Dark Side,\r\nMaiden,\r\nFinders Keepers,\r\nFor the Bible Tells Me So,\r\nBlindsight,\r\nRodents of Unusual Size,\r\nThe Island President,\r\nThe Devil Came on Horseback,\r\nPick of the Litter,\r\nMea Maxima Culpa: Silence In The House Of God,\r\nMarwencol,\r\nUndefeated,\r\nStories We Tell,\r\nBombshell: The Hedy Lamarr Story,\r\nThe Overnighters,\r\nBeware Of Mr. Baker,\r\nCall Me Kuchu,\r\nHale County This Morning, This Evening,\r\nSicko,\r\nThe Beatles: Eight Days a Week - The Touring Years,\r\nJafar Panahi's Taxi,\r\nThe War Tapes,\r\nMuscle Shoals,\r\nCave of Forgotten Dreams,\r\nBowling for Columbine,\r\nMurderball,\r\nTower,\r\nShirkers,\r\nInside Job,\r\nAnvil! The Story of Anvil,\r\nTea With the Dames,\r\nThe Square,\r\nSeymour: An Introduction,\r\nJiro Dreams of Sushi,\r\nThe Missing Picture,\r\nDeliver Us from Evil,\r\nParis Is Burning,\r\nOne Child Nation,\r\nHoop Dreams,\r\nWaste Land,\r\nWaltz with Bashir,\r\nCitizenfour,\r\nThe Interrupters,\r\nAfghan Star,\r\nStrong Island,\r\nJodorowsky's Dune,\r\nMr. Death The Rise and Fall of Fred  Leuchter,\r\nIris,\r\nCapturing the Friedmans,\r\nProject Nim,\r\nThe Invisible War,\r\nRBG,\r\nSound City,\r\nElaine Stritch: Shoot Me,\r\n56 Up,\r\nLast Train Home,\r\nMy Journey Through French Cinema, \r\nThe Look of Silence, \r\nEveryday Sunshine: The Story of Fishbone, \r\nNostalgia for the Light, \r\nSpellbound, \r\nWe Were Here, \r\nThe Act Of Killing, \r\nEnron: The Smartest Guys in the Room,\r\nBill Cunningham New York, \r\nRivers and Tides: Andy Goldsworthy Working With Time, \r\nAi Weiwei: Never Sorry, \r\n13th, \r\nHow to Survive a Plague, \r\nWhen We Were Kings, \r\nAmerican Factory, \r\nThis Is Not a Film, \r\nMarch of the Penguins, \r\nHitchcock/Truffaut, \r\nKurt Cobain: Montage Of Heck, \r\nRestrepo, \r\nThe King of Kong: A Fistful of Quarters, \r\nThe Fog of War Eleven Lessons from the Life of Robert S. McNamara,\r\nThe Panama Papers,\r\nLA 92,\r\nThe Scheme,\r\nHoaxed,\r\nAmanda Knox,\r\nThe Endless Summer,\r\nCollective,\r\nAn Inconvenient Truth,\r\nCasting JonBenet,\r\nOn the Record,\r\nWe Need to Talk About AI,\r\nSuper Size Me 2: Holy Chicken,\r\nThe Edge of Democracy,\r\nBuena Vista Social Club,\r\nUntouchable,\r\nDeep Web,\r\n20 Feet from Stardom,\r\nZero Days,\r\nAmerican Movie,\r\nEndgame 2050,\r\nInside Deep Throat,\r\nGimme Shelter,\r\nThe Farthest,\r\nMidnight Family,\r\nThe Abolitionists,\r\nAliens of the Deep,\r\nWest of Memphis,\r\nFoosballers,\r\nThe Hunting Ground,\r\nGimme Danger,\r\nThe Queen of Versailles,\r\nScheme Birds,\r\nDrunk Stoned Brilliant Dead,\r\nCapitalism: A Love Story,\r\nThe Black Godfather,\r\nCity of Ghosts,\r\nThe Hangover,\r\nWedding Crashers,\r\nThe Hangover Part II,\r\nThe Hangover Part III,\r\nTed,\r\nThe 40-Year-Old Virgin,\r\nHarold & Kumar Go to White Castle,\r\nHarold & Kumar Escape from Guantanamo Bay,\r\nRoad Trip,\r\nIdiocracy,\r\nFriday,\r\nMeet the Parents,\r\nNapoleon Dynamite,\r\nKnocked Up,\r\nSuper Troopers,\r\nOffice Space,\r\nBaywatch,\r\nWar Dogs,\r\nLong Shot,\r\nSpy,\r\nDude, Where's My Car,\r\nClerks,\r\nThe Gentlemen,\r\nParasite,\r\nThe Rum Diary,\r\nFear and Loathing in Las Vegas,\r\nSweeney Todd: The Demon Barber of Fleet Street,\r\nRango,\r\nOnce Upon a Time in Mexico,\r\nThe Ninth Gate,\r\nIce Age,\r\nHellboy,\r\nHellboy II: The Golden Army,\r\nBiutiful,\r\nMegamind,\r\nThe Skin I Live In,\r\nStarry Starry Night,\r\nRay,\r\nNo Man's Land,\r\nChicago,\r\nMachete,\r\nThe Aviator,\r\nMillion Dollar Baby,\r\n3:10 to Yuma,\r\nTupac: Resurrection,\r\n8 Mile,\r\nNotorious,\r\nThe Sea Inside,\r\nHustle & Flow,\r\nCapote,\r\nCrash,\r\nAmerican History X,\r\nSyriana,\r\nBabel,\r\nLetters from Iwo Jima,\r\nThe Last King of Scotland,\r\nBlood Diamond,\r\nThe Tree of Life,\r\nThe Bodyguard,\r\nDeja Vu,\r\nFriday the 13th,\r\nHalloween,\r\nThe Texas Chain Saw Massacre,\r\nFreddy vs. Jason,\r\nFriday the 13th: The Final Chapter,\r\nFriday the 13th Part VI: Jason Lives,\r\nFriday the 13th Part III,\r\nBeauty and the Beast,\r\nThe Transporter,\r\nThree Extremes,\r\nJ. Edgar,\r\nMirrors,\r\nLord of War,\r\nNational Treasure,\r\nDeath Proof,\r\nPlanet Terror,\r\n8MM,\r\nHarry Potter and the Sorcerer's Stone,\r\nHarry Potter and the Chamber of Secrets,\r\nHarry Potter and the Prisoner of Azkaban,\r\nThe Machinist,\r\nLegends of the Fall,\r\nAce Ventura: Pet Detective,\r\nThe Truman Show,\r\nMe, Myself & Irene,\r\nHow the Grinch Stole Christmas,\r\nTransformers,\r\nMission: Impossible,\r\nMission: Impossible II,\r\nSunshine,\r\nMeet the Fockers,\r\nZodiac,\r\nUnderworld,\r\n1408,\r\n1900,\r\n21 Grams,\r\n300,\r\nAli G Indahouse,\r\nAmerican Pie,\r\nAmerican Pie 2,\r\nAnalyze This,\r\nYou've Got Mail,\r\nThe Ladykillers,\r\nGet Him to the Greek,\r\nThe Road,\r\nAs Good as It Gets,\r\nThe Bucket List,\r\nMars Attacks!,\r\nWolf,\r\nThe Irishman,\r\nHoffa,\r\nA Few Good Men,\r\nCashback,\r\nThe Cell,\r\nBurn After Reading,\r\nThe Bank Job,\r\nConstantine,\r\nKing of California,\r\nThe Crow,\r\nCube,\r\nDawn of the Dead,\r\nResident Evil,\r\nDesperado,\r\nOnce Upon a Time in Mexico,\r\nThe Devil's Advocate,\r\nDie Hard 2,\r\nFirst Blood,\r\nRambo,\r\nDogville,\r\nDownfall,\r\nThe Fifth Element,\r\nThe Fountain,\r\nThe Gods Must Be Crazy,\r\nThe Invasion,\r\nThe Last Samurai,\r\nKung Fu Hustle,\r\nParanormal Activity,\r\nSaw,\r\nSaw II,\r\nRed Dragon,\r\nHannibal,\r\nPredator,\r\nFrom Hell,\r\nIn Time,\r\nJu-on: The Grudge,\r\nA Very Harold & Kumar Christmas,\r\nHome Alone,\r\nHouse of Wax,\r\nRepo Men,\r\nStreet Kings,\r\nVantage Point,\r\nPanic Room,\r\nLimitless,\r\nMan On Fire,\r\nMystic River,\r\nThe Others,\r\nPaul,\r\nPsycho,\r\nThank You for Smoking,\r\nV for Vendetta,\r\nWatchmen,\r\nDorian Gray,\r\nHitch,\r\nUnbreakable,\r\nThe Mist,\r\nBlade Runner,\r\nBlade Runner 2049,\r\nWest Side Story,\r\nA Time to Kill,\r\nThe Good German,\r\nTango & Cash,\r\nPlatoon,\r\nArmageddon,\r\nBullet,\r\nHow High,\r\nBlack Irish,\r\nFido,\r\nPrince of Persia: The Sands of Time,\r\nGood Morning, Vietnam,\r\nDevils on the Doorstep,\r\nThe Raid: Redemption,\r\nThe Day of the Jackal,\r\nThe Lorax,\r\nInk,\r\nBefore the Devil Knows You're Dead,\r\nThere Will Be Blood,\r\nCoraline,\r\nTotal Recall,\r\n127 Hours,\r\nLa Haine,\r\nAgora,\r\n2001: A Space Odyssey,\r\nStalker,\r\nPlanet of the Apes,\r\nCloudy with a Chance of Meatballs,\r\nMadagascar,\r\nThe Dark Knight Rises,\r\nOver the Hedge,\r\nBee Movie,\r\nDark City,\r\nThe Dictator,\r\nO Brother, Where Art Thou?,\r\nOrphan,\r\nBarry Lyndon,\r\nThe Thin Red Line,\r\nSleepy Hollow,\r\nBeetlejuice,\r\nThe Believer,\r\nA Room with a View,\r\nAbsolute Power,\r\nA Perfect World,\r\nThe Witches of Eastwick,\r\nWall Street,\r\nThelma & Louise,\r\nThe Man from Earth,\r\nArgo,\r\nThe Sting,\r\nIntimate Stories,\r\nMurder on the Orient Express,\r\nDances with Wolves,\r\nBlue Velvet,\r\nWild at Heart,\r\nInland Empire,\r\nShaun of the Dead,\r\nA Fistful of Dollars,\r\nMean Streets,\r\nFor a Few Dollars More,\r\nGet Carter,\r\nA Single Man,\r\nBeing There,\r\nThe Wild Bunch,\r\nPrometheus,\r\nJFK,\r\nNeds,\r\nMilk,\r\nMalcolm X,\r\nAmores Perros,\r\nGladiator,\r\nAliens,\r\nAlien: Resurrection,\r\nThe Terminator,\r\nTerminator 2: Judgment Day,\r\nTerminator 3: Rise of the Machines,\r\nMemories of Murder,\r\nThe Return,\r\nI Saw the Devil,\r\nChildren of Heaven,\r\nA Separation,\r\nNetwork,\r\nRaging Bull,\r\nThe Thing,\r\nThe Quiet Earth,\r\nThe Color Purple,\r\nBrazil,\r\nPhiladelphia,\r\nNatural Born Killers,\r\nBuffalo '66,\r\nSlumdog Millionaire,\r\nDistrict 9,\r\nThe Great Debaters,\r\nPaul,\r\nPhone Booth,\r\nMelancholia,\r\nMemoirs of a Geisha,\r\nEnemy of the State,\r\nAnna and the King,\r\nThe Golden Compass,\r\nWar Horse,\r\nStargate,\r\nThe Butterfly Effect,\r\nRiver’s Edge,\r\nThe Purple Rose of Cairo,\r\nMatewan,\r\nSuburbia,\r\nEureka,\r\nSex, Lies and Videotape,\r\nMiracle Mile,\r\nAfter Hours,\r\nThe Forest Of Love,\r\nKlaus,\r\nPaddleton,\r\nTell Me Who I Am,\r\nI Lost My Body,\r\nSystem Crasher,\r\nMarriage Story,\r\nUncut Gems,\r\nMs .45,\r\nJoint Security Area,\r\nThe Taking of Pelham One Two Three,\r\nThe Bird with the Crystal Plumage,\r\nRolling Thunder,\r\nBullit,\r\nFist of Fury,\r\nThe Getaway,\r\nAmer,\r\nSeraphim Falls,\r\nThe Salvation,\r\nPurgatory,\r\nConagher,\r\nThe Big Gundown,\r\nThe Missouri Breaks,\r\nIn a Valley of Violence,\r\nMeek’s Cutoff,\r\nThe Great Silence,\r\nThe Wailing,\r\nTumbbad,\r\nI See You,\r\nDeathgasm,\r\nHell House LLC,\r\nSouthbound,\r\nMermaid Down,\r\nBraid,\r\nThe Night Eats the World,\r\nThe Seventh Seal,\r\nAnimal Factory,\r\nKing of Devil’s Island,\r\nLast Light,\r\nBrubaker,\r\nCaptives,\r\nBad Boys,\r\nStarred Up,\r\nBlindspotting,\r\nWaves,\r\nWind River,\r\nCaptain Fantastic,\r\nPride,\r\nThe Lobster,\r\nAmerican Honey,\r\nKrisha,\r\nEraserhead,\r\nMulholland Dr,\r\n28 Days Later,\r\nThe One I Love,\r\nFreaks,\r\nHow to Talk to Girls at Parties,\r\nStarfish,\r\nVivarium,\r\nCrumbs,\r\nParallel,\r\nImitation Girl,\r\nThe Vast of Night,\r\nPossessor,\r\nBirdman,\r\nBirth,\r\nGoodbye, Dragon Inn,\r\nDead Man’s Shoes,\r\nMorvern Callar,\r\nWendy and Lucy,\r\nThe Headless Woman,\r\nFish Tank,\r\nSynecdoche, New York,\r\nSPL: Kill Zone,\r\nThe Sisters Brothers,\r\nUnder the Silver Lake,\r\nAn Evening with Beverly Luff Linn,\r\nCam,\r\nDamsel,\r\nVirus Tropical,\r\nThunder Road,\r\nShoplifters,\r\nSorry to Bother You,\r\nIsle of Dogs,\r\nThe Favourite,\r\nMandy,\r\nYou Were Never Really Here,\r\nThe Rider,\r\nLeave No Trace,\r\nSuspiria,\r\nEighth Grade,\r\nFirst Reformed,\r\nMoonlight,\r\nAmerican Graffiti,\r\nRosemary's Baby,\r\n12 Years a Slave,\r\nGravity,\r\nSpirited Away,\r\nThe Hurt Locker,\r\nBefore Midnight,\r\nAmour,\r\nGrave of the Fireflies,\r\nThe Wild Child,\r\nAmazing Grace,\r\nCarlos,\r\nCall Me by Your Name,\r\nInside Llewyn Davis,\r\nThe Decline of Western Civilization,\r\nThe Florida Project,\r\nAnnie Hall,\r\nLeviathan,\r\nThe Killing,\r\nFantastic Mr. Fox,\r\nThe Ground Beneath My Feet,\r\nA Serious Man,\r\nThe Guilty,\r\nSaint Frances,\r\nI Wish I Knew,\r\nCorpse Bride,\r\nThe Wind Rises,\r\nThe Lighthouse,\r\nParanoid Park,\r\nPalm Springs,\r\nIxcanul,\r\nTaxidermia,\r\nSpider,\r\nLast and First Men,\r\nCutie and the Boxer,\r\nThe Flat,\r\nIt Follows,\r\nCourt,\r\nElection,\r\nCreed,\r\nRelaxer,\r\nWar for the Planet of the Apes,\r\nFace/Off,\r\nDogtooth,\r\nHunger,\r\nBlack Sabbath,\r\nMichael Clayton,\r\nParis Is Burning,\r\nOn the Beach at Night Alone,\r\nLove & Mercy,\r\nTaste of Cherry,\r\nHenry: Portrait of a Serial Killer,\r\nMaking Waves: The Art of Cinematic Sound,\r\nLucky,\r\nThe Force,\r\nDeep Water,\r\nThe Endless,\r\nFrost/Nixon,\r\nLast Resort,\r\n3 from Hell,\r\n47 Meters Down: Uncaged,\r\nAnnabelle Comes Home,\r\nBlack Christmas,\r\nBliss,\r\nBrightburn,\r\nChild's Play,\r\nColor Out of Space,\r\nCountdown,\r\nCrawl,\r\nThe Curse of La Llorona,\r\nDaniel Isn't Real,\r\nDoctor Sleep,\r\nDon't Let Go,\r\nEarthquake Bird,\r\nEli,\r\nEscape Room,\r\nHappy Death Day 2U,\r\nHarpoon,\r\nHaunt,\r\nThe Hole in the Ground,\r\nSweetheart,\r\nVelvet Buzzsaw,\r\nCarrie,\r\nCurse of Chucky,\r\nThe Conjuring,\r\nDark Skies,\r\nDark Touch,\r\nDiscopath,\r\nWillow Creek,\r\nV/H/S/2,\r\n`;\r\n\r\nexport default text;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport YouTube from \"react-youtube\";\nimport text from \"./movielist/movielist.js\";\n\nexport default class Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      page: \"\",\n      header: \"\",\n      overview: \"\",\n      poster: \"\",\n      vote_average: \"\",\n      release_date: \"\",\n      genre_list: \"\",\n      movie_id: \"\",\n      trailer: \"\",\n      isButtonEnabled: true,\n      filterList: [],\n      filterList_Id: [],\n      filterhide: \"filter-container-small\",\n      valueSlider: 0,\n      isLoading: false,\n      banList: [\"Gabriel's Inferno Part II\", \"Gabriel's Inferno\"],\n    };\n    this.getfromDB = this.getfromDB.bind(this);\n    this.getRandomPage = this.getRandomPage.bind(this);\n    this.returnTimer = this.returnTimer.bind(this);\n  }\n  reversegetGenre(filterList) {\n    let genre_list_var = [];\n    if (filterList.includes(\"Action\")) {\n      genre_list_var.push(28);\n    }\n    if (filterList.includes(\"Adventure\")) {\n      genre_list_var.push(12);\n    }\n    if (filterList.includes(\"Animation\")) {\n      genre_list_var.push(16);\n    }\n    if (filterList.includes(\"Comedy\")) {\n      genre_list_var.push(35);\n    }\n    if (filterList.includes(\"Crime\")) {\n      genre_list_var.push(80);\n    }\n    if (filterList.includes(\"Documentary\")) {\n      genre_list_var.push(99);\n    }\n    if (filterList.includes(\"Drama\")) {\n      genre_list_var.push(18);\n    }\n    if (filterList.includes(\"Family\")) {\n      genre_list_var.push(10751);\n    }\n    if (filterList.includes(\"Fantasy\")) {\n      genre_list_var.push(14);\n    }\n    if (filterList.includes(\"History\")) {\n      genre_list_var.push(36);\n    }\n    if (filterList.includes(\"Horror\")) {\n      genre_list_var.push(27);\n    }\n    if (filterList.includes(\"Music\")) {\n      genre_list_var.push(10402);\n    }\n    if (filterList.includes(\"Mystery\")) {\n      genre_list_var.push(9648);\n    }\n    if (filterList.includes(\"Romance\")) {\n      genre_list_var.push(10749);\n    }\n    if (filterList.includes(\"Science Fiction\")) {\n      genre_list_var.push(878);\n    }\n    if (filterList.includes(\"TV Movie\")) {\n      genre_list_var.push(10770);\n    }\n    if (filterList.includes(\"Thriller\")) {\n      genre_list_var.push(53);\n    }\n    if (filterList.includes(\"War\")) {\n      genre_list_var.push(10752);\n    }\n    if (filterList.includes(\"Western\")) {\n      genre_list_var.push(37);\n    }\n    this.setState({ filterList_Id: genre_list_var });\n  }\n  getGenre(genre_list) {\n    let genre_list_var = [];\n    if (genre_list.includes(28)) {\n      genre_list_var.push(\"Action\");\n    }\n    if (genre_list.includes(12)) {\n      genre_list_var.push(\"Adventure\");\n    }\n    if (genre_list.includes(16)) {\n      genre_list_var.push(\"Animation\");\n    }\n    if (genre_list.includes(35)) {\n      genre_list_var.push(\"Comedy\");\n    }\n    if (genre_list.includes(80)) {\n      genre_list_var.push(\"Crime\");\n    }\n    if (genre_list.includes(99)) {\n      genre_list_var.push(\"Documentary\");\n    }\n    if (genre_list.includes(18)) {\n      genre_list_var.push(\"Drama\");\n    }\n    if (genre_list.includes(10751)) {\n      genre_list_var.push(\"Family\");\n    }\n    if (genre_list.includes(14)) {\n      genre_list_var.push(\"Fantasy\");\n    }\n    if (genre_list.includes(36)) {\n      genre_list_var.push(\"History\");\n    }\n    if (genre_list.includes(27)) {\n      genre_list_var.push(\"Horror\");\n    }\n    if (genre_list.includes(10402)) {\n      genre_list_var.push(\"Music\");\n    }\n    if (genre_list.includes(9648)) {\n      genre_list_var.push(\"Mystery\");\n    }\n    if (genre_list.includes(10749)) {\n      genre_list_var.push(\"Romance\");\n    }\n    if (genre_list.includes(878)) {\n      genre_list_var.push(\"Science Fiction\");\n    }\n    if (genre_list.includes(10770)) {\n      genre_list_var.push(\"TV Movie\");\n    }\n    if (genre_list.includes(53)) {\n      genre_list_var.push(\"Thriller\");\n    }\n    if (genre_list.includes(10752)) {\n      genre_list_var.push(\"War\");\n    }\n    if (genre_list.includes(37)) {\n      genre_list_var.push(\"Western\");\n    }\n\n    for (let i = 0; i < genre_list_var.length; i++) {\n      if (genre_list_var.length > 1 && i !== genre_list_var.length - 1) {\n        genre_list_var[i] = genre_list_var[i] + \",\";\n      }\n    }\n    this.setState({ genre_list: genre_list_var });\n  }\n  addtoFilterList(e) {\n    if (this.state.filterList.includes(e.innerText)) {\n      for (let i = 0; i < this.state.filterList.length; i++) {\n        if (e.innerText === this.state.filterList[i]) {\n          e.className = \"Filter\";\n          this.state.filterList.splice(i, 1);\n        }\n      }\n      return;\n    } else if (this.state.filterList.length < 2) {\n      e.className = \"Filter-Disabled\";\n      this.setState((prevState) => ({\n        filterList: [...prevState.filterList, e.innerText],\n      }));\n    }\n  }\n  FetchPopularApi() {\n    fetch(\n      \"https://api.themoviedb.org/3/movie/popular?api_key=5128962f0597ca2a14fb399262a51b05&language=en-US&page=\" +\n        this.state.page\n    )\n      .then((res) => res.json())\n      .then(\n        (res) => {\n          this.setState({\n            data: res.results,\n          });\n        },\n        (error) => {\n          console.log(\"ERROR!\");\n        }\n      )\n      .then(() => {\n        if (this.state.filterList.length > 0) {\n          this.getfromDBGenre();\n        } else {\n          this.getfromDB();\n        }\n      })\n      .catch((error) => console.log(error));\n  }\n  FetchTopRatedApi() {\n    fetch(\n      \"https://api.themoviedb.org/3/movie/top_rated?api_key=5128962f0597ca2a14fb399262a51b05&language=en-US&page=\" +\n        this.state.page\n    )\n      .then((res) => res.json())\n      .then(\n        (res) => {\n          this.setState({\n            data: res.results,\n          });\n        },\n        (error) => {\n          console.log(\"ERROR!\");\n        }\n      )\n      .then(() => {\n        if (this.state.filterList.length > 0) {\n          this.getfromDBGenre();\n        } else {\n          this.getfromDB();\n        }\n      })\n      .catch((error) => console.log(error));\n  }\n  FetchRecommendedApi() {\n    fetch(\n      \"https://api.themoviedb.org/3/movie/\" +\n        this.state.movie_id +\n        \"/recommendations?api_key=5128962f0597ca2a14fb399262a51b05&language=en-US&page=1\"\n    )\n      .then((res) => res.json())\n      .then(\n        (res) => {\n          this.setState({\n            data: res.results,\n          });\n        },\n        (error) => {\n          console.log(\"ERROR!\");\n        }\n      )\n      .then(() => {\n        if (this.state.filterList.length > 0) {\n          this.getfromDBGenre();\n        } else {\n          this.getfromDB();\n        }\n      })\n      .catch((error) => console.log(error));\n  }\n  FetchSimilarApi() {\n    fetch(\n      \"https://api.themoviedb.org/3/movie/\" +\n        this.state.movie_id +\n        \"/similar?api_key=5128962f0597ca2a14fb399262a51b05&language=en-US&page=1\"\n    )\n      .then((res) => res.json())\n      .then(\n        (res) => {\n          this.setState({\n            data: res.results,\n          });\n        },\n        (error) => {\n          console.log(\"ERROR!\");\n        }\n      )\n      .then(() => {\n        if (this.state.filterList.length > 0) {\n          this.getfromDBGenre();\n        } else {\n          this.getfromDB();\n        }\n      })\n      .catch((error) => console.log(error));\n  }\n  fetchTrailer() {\n    fetch(\n      \"https://api.themoviedb.org/3/movie/\" +\n        this.state.movie_id +\n        \"/videos?api_key=5128962f0597ca2a14fb399262a51b05&language=en-US\"\n    )\n      .then((res) => res.json())\n      .then(\n        (res) => {\n          let trailer = res.results[0].key;\n          this.setState({\n            trailer: trailer,\n          });\n        },\n        (error) => {\n          console.log(\"ERROR!\");\n        }\n      )\n      .then(() => this.setState({ isButtonEnabled: true }))\n      .catch(\n        () => this.setState({ trailer: \"\" }),\n        this.setState({ isButtonEnabled: true })\n      );\n  }\n  getfromDBGenre() {\n    this.reversegetGenre(this.state.filterList);\n    let rndmArray = [];\n    for (let i = 0; i < this.state.data.length; i++) {\n      if (this.state.filterList_Id.length === 1) {\n        if (\n          this.state.data[i].genre_ids.includes(this.state.filterList_Id[0])\n        ) {\n          if (this.state.data[i].vote_average >= this.state.valueSlider) {\n            rndmArray.push(this.state.data[i]);\n          }\n        }\n      } else if (this.state.filterList_Id.length === 2) {\n        if (\n          this.state.data[i].genre_ids.includes(this.state.filterList_Id[0])\n        ) {\n          if (\n            this.state.data[i].genre_ids.includes(this.state.filterList_Id[1])\n          ) {\n            if (this.state.data[i].vote_average >= this.state.valueSlider) {\n              rndmArray.push(this.state.data[i]);\n            }\n          }\n        }\n      }\n    }\n    var rndm = Math.floor(Math.random() * rndmArray.length);\n    if (rndmArray[rndm] === undefined) {\n      if (this.state.isLoading === false) {\n        return;\n      } else {\n        this.componentDidMount();\n      }\n    } else {\n      this.getGenre(rndmArray[rndm].genre_ids);\n      if (this.state.banList.includes(rndmArray[rndm].title)) {\n        return;\n      }\n      this.setState({ header: rndmArray[rndm].title });\n      this.setState({ movie_id: rndmArray[rndm].id }, () => {\n        this.fetchTrailer();\n      });\n      this.setState({ overview: rndmArray[rndm].overview });\n      this.setState({\n        poster: \"https://image.tmdb.org/t/p/w185\" + rndmArray[rndm].poster_path,\n      });\n      this.setState({ vote_average: rndmArray[rndm].vote_average });\n\n      //genre Function\n      this.getGenre(rndmArray[rndm].genre_ids);\n\n      let str = rndmArray[rndm].release_date.toString();\n      let n = str.indexOf(\"-\");\n      str = str.slice(0, n);\n      this.setState({ release_date: \"(\" + str + \")\" });\n      this.setState({ isButtonEnabled: true });\n      this.setState({ isLoading: false });\n\n      // eslint-disable-next-line no-implied-eval\n      var highestTimeoutId = setTimeout(\";\");\n      for (var i = 0; i < highestTimeoutId; i++) {\n        clearTimeout(i);\n      }\n      //\n    }\n  }\n  getfromDB() {\n    let rndmArray = [];\n    for (let i = 0; i < this.state.data.length; i++) {\n      if (this.state.data[i].vote_average >= this.state.valueSlider) {\n        rndmArray.push(this.state.data[i]);\n      }\n    }\n    let rndm = Math.floor(Math.random() * rndmArray.length);\n    if (rndmArray[rndm] === undefined) {\n      if (this.state.isLoading === false) {\n        return;\n      } else {\n        this.componentDidMount();\n      }\n    } else {\n      if (this.state.banList.includes(rndmArray[rndm].title)) {\n        return;\n      }\n      this.setState({ header: rndmArray[rndm].title });\n      this.setState({ movie_id: rndmArray[rndm].id }, () => {\n        this.fetchTrailer();\n      });\n      this.setState({ overview: rndmArray[rndm].overview });\n      this.setState({\n        poster: \"https://image.tmdb.org/t/p/w185\" + rndmArray[rndm].poster_path,\n      });\n      this.setState({ vote_average: rndmArray[rndm].vote_average });\n\n      //genre Function\n      this.getGenre(rndmArray[rndm].genre_ids);\n\n      let str = rndmArray[rndm].release_date.toString();\n      let n = str.indexOf(\"-\");\n      str = str.slice(0, n);\n      this.setState({ release_date: \"(\" + str + \")\" });\n      this.setState({ isButtonEnabled: true });\n      this.setState({ isLoading: false });\n\n      // eslint-disable-next-line no-implied-eval\n      var highestTimeoutId = setTimeout(\";\");\n      for (var i = 0; i < highestTimeoutId; i++) {\n        clearTimeout(i);\n      }\n    }\n  }\n  getRandomPage() {\n    let rndm = Math.floor(Math.random() * 500) + 1;\n    let rndmCtgr = Math.floor(Math.random() * Math.floor(2));\n    let rndmSimilar = Math.floor(Math.random() * 10) + 1;\n\n    if (rndmCtgr === 1) {\n      rndm = Math.floor(Math.random() * Math.floor(381)) + 1;\n    }\n    if (this.state.valueSlider >= 8) {\n      rndmCtgr = 1;\n      rndm = Math.floor(Math.random() * Math.floor(16)) + 1;\n    }\n    this.setState({ isButtonEnabled: false });\n    this.setState({ page: rndm }, () => {\n      if (rndmCtgr === 0 && rndmSimilar !== 10) {\n        let rndmCtgr2 = Math.floor(Math.random() * Math.floor(2));\n        if (rndmCtgr2 === 0) {\n          this.FetchPopularApi();\n        } else {\n          rndm = 0;\n          this.FetchPersonalApi();\n        }\n      } else if (rndmCtgr === 1 && rndmSimilar !== 10) {\n        this.FetchTopRatedApi();\n      } else if (rndmSimilar === 10) {\n        if (this.state.data.length > 0) {\n          let rndmCtgr2 = Math.floor(Math.random() * Math.floor(2));\n          if (rndmCtgr2 === 0) {\n            this.FetchSimilarApi();\n          } else {\n            this.FetchRecommendedApi();\n          }\n        } else {\n          this.FetchPopularApi();\n        }\n      }\n    });\n  }\n  RefreshFunction() {\n    if (this.state.isButtonEnabled === true) {\n      this.setState({ isLoading: true });\n      this.setState({ trailer: \"\" });\n      setTimeout(() => {\n        if (this.state.isLoading === true) {\n          this.setState({ isLoading: false });\n          this.setState({ isButtonEnabled: true });\n          return;\n        } else {\n        }\n      }, 5000);\n      this.getRandomPage();\n      return;\n    }\n  }\n  changeSlider(e) {\n    this.setState({ valueSlider: e.target.value });\n  }\n\n  returnTimer() {\n    if (this.state.isLoading === true) {\n      return <div className=\"loader\"></div>;\n    } else {\n      return <div />;\n    }\n  }\n  FetchPersonalApi() {\n    var nameArr = text.split(\",\");\n    let num = Math.floor(Math.random() * Math.floor(nameArr.length));\n    var movie = nameArr[num];\n    movie = movie.replace(/ /g, \"+\");\n    fetch(\n      \"https://api.themoviedb.org/3/search/movie?api_key=5128962f0597ca2a14fb399262a51b05&query=\" +\n        movie\n    )\n      .then((res) => res.json())\n      .then(\n        (res) => {\n          let array = res.results;\n          array.splice(1);\n          this.setState({\n            data: array,\n          });\n        },\n        (error) => {\n          console.log(\"ERROR!\");\n        }\n      )\n      .then(() => {\n        if (this.state.filterList.length > 0) {\n          this.getfromDBGenre();\n        } else {\n          this.getfromDB();\n        }\n      })\n      .catch((error) => console.log(error));\n  }\n  changeFilterShow() {\n    if (this.state.filterhide === \"filter-container-small\") {\n      this.setState({ filterhide: \"filter-container\" });\n    } else {\n      this.setState({ filterhide: \"filter-container-small\" });\n      let emptarray = [];\n      this.setState({ filterList: emptarray });\n      let allbuttons = document.getElementsByClassName(\"Filter-Disabled\");\n      for (let i = 0; i < allbuttons.length; i++) {\n        if (allbuttons[i] !== undefined) {\n          allbuttons[i].className = \"Filter\";\n        }\n        if (allbuttons[i] !== undefined) {\n          allbuttons[i].className = \"Filter\";\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.getRandomPage();\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Card\">\n          <div className=\"Header_Release_Date_Container\">\n            <h1 className=\"Header\">{this.state.header}</h1>\n            <p className=\"Release_Date\">&nbsp;{this.state.release_date}</p>\n          </div>\n          <p className=\"Genre_List\">{this.state.genre_list}</p>\n          <p className=\"Overview\">{this.state.overview}</p>\n          <img className=\"Poster\" src={this.state.poster} alt=\"\" />\n          <p>Rating: {this.state.vote_average}/10</p>\n          {this.returnTimer()}\n          <div className=\"slidecontainer\">\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"10\"\n              value={this.state.valueSlider}\n              className=\"slider\"\n              id=\"myRange\"\n              onChange={(e) => {\n                this.changeSlider(e);\n              }}\n            />\n            <p className=\"RatingSlider\">Rating > {this.state.valueSlider}</p>\n          </div>\n\n          <button\n            className=\"Refresh\"\n            onClick={() => {\n              this.RefreshFunction();\n            }}\n          >\n            REFRESH\n          </button>\n          <button\n            onClick={() => {\n              this.changeFilterShow();\n            }}\n            className=\"filter-button\"\n          ></button>\n          <div className={this.state.filterhide}>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Action\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Adventure\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Animation\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Comedy\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Crime\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Documentary\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Drama\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Family\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Fantasy\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              History\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Horror\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Music\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Mystery\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Romance\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Science Fiction\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              TV Movie\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Thriller\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              War\n            </button>\n            <button\n              onClick={(e) => {\n                this.addtoFilterList(e.target);\n              }}\n              className=\"Filter\"\n            >\n              Western\n            </button>\n          </div>\n          <div className=\"player-wrapper\">\n            <YouTube\n              videoId={this.state.trailer}\n              className=\"react-player\"\n            />\n          </div>\n          <div className=\"Footer\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}